#version 400 core

in vec3 position;
in vec2 textureCoords;
in vec3 normal;
in vec3 vertexColor;

out vec2 pass_textureCoords;
out vec3 color;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;

uniform float texOffX;
uniform float texOffY;

uniform vec4 clipPlaneBehind;

void main(void)
{
	vec4 worldPosition = transformationMatrix * vec4(position, 1.0);
	vec4 positionRelativeToCam = viewMatrix * worldPosition;
	gl_Position = projectionMatrix * positionRelativeToCam;
	
    gl_ClipDistance[1] = dot(worldPosition, clipPlaneBehind);
	
	pass_textureCoords.x = textureCoords.x+texOffX;
	pass_textureCoords.y = textureCoords.y+texOffY;
	
	color = vertexColor;
    color *= 0.75 + (normal.y/4);
}
